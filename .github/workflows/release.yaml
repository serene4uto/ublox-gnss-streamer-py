name: Build and Release

on:
  push:
    tags:
      - 'v*'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Nuitka
        run: |
          python -m pip install --upgrade pip
          python -m pip install nuitka

      - name: Determine Version
        id: get_version
        run: |
          VERSION="${GITHUB_REF##*/}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"

      - name: Build Binary
        env:
          VERSION: ${{ steps.get_version.outputs.version }}
        run: |
          chmod +x /scripts/build-bin.sh
          bash /scripts/build-bin.sh ${{ matrix.target }} "${{ steps.get_version.outputs.version }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target }}
          path: bin/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries-x86_64
          path: binaries-x86_64
      - name: Download Artifacts arm
        uses: actions/download-artifact@v4
        with:
          name: binaries-aarch64
          path: binaries-aarch64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          files: |
            binaries-x86_64/ublox_gnss_streamer_x86_64-${{ github.ref_name }}.tar.gz
            binaries-aarch64/ublox_gnss_streamer_aarch64-${{ github.ref_name }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
